#!/usr/bin/env ruby
# encoding: utf-8

lib = File.expand_path('../lib', File.dirname(__FILE__))
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'raz'
require 'commander/import'

module Commander
  module UI
    def enable_paging
      # to suppress paging for help output
    end
    def self.enable_paging
      # to suppress paging for help output
    end
  end
end



program :version, Raz::VERSION
program :description, 'Tool to make reinstalling system much easier'
program :help, 'Author', 'Roman Kříž <roman@kriz.io>'
program :help, 'GitHub', 'https://github.com/samnung/raz'
program :help_formatter, :compact

# ----------------------- backup -----------------------------------

command :backup do |c|
  c.syntax = 'raz backup <backup-path>'
  c.description = 'Backup all files to destination folder'

  c.action do |args, options|
    help_now! 'Specify at least one destination path' if args.size == 0
    help_now! 'Specify only one destination path' if args.size > 1

    config_path = Raz.config_path
    help_now! "Missing configuration file at #{config_path}" unless File.file?(config_path)

    backuper = Raz::Backuper.new(Raz::ConfigFile.new(config_path), args.first)
    backuper.backup
  end
end

# ----------------------- restore -----------------------------------

command :restore do |c|
  c.syntax = 'raz restore <backup-path>'
  c.description = 'Restore all files from source folder'

  c.action do |args, options|
    help_now! 'Specify at least one source path' if args.size == 0
    help_now! 'Specify only one source path' if args.size > 1

    restorer = Raz::Restorer.new(args.first)
    restorer.restore
  end
end

default_command :help
