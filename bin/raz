#!/usr/bin/env ruby

lib = File.expand_path('../lib', File.dirname(__FILE__))
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'raz'
require 'gli'

include GLI::App

program_desc 'Tool to backup and restore files.'
version Raz::VERSION


on_error do |e|
  $stderr.puts "#{e.message}".red
  $stderr.puts "  from #{e.backtrace.join("\n  from ")}".red unless e.is_a?(OptionParser::ParseError)
end


# ----------------------- backup -----------------------------------

desc 'Backup all files to destination folder'
arg :destination_path

command :backup do |c|
  # c.desc 'Path to configuration file'
  # c.flag :c, :conf

  c.action do |global_options, options, args|
    help_now! 'Specify at least one destination path' if args.size == 0
    help_now! 'Specify only one destination path' if args.size > 1

    config_path = Raz.config_path
    help_now! "Missing configuration file at #{config_path}" unless File.file?(config_path)

    backuper = Raz::Backuper.new(Raz::ConfigFile.new(config_path), args.first)
    backuper.backup
  end
end




# ----------------------- restore -----------------------------------

desc 'Restore all files from source folder'
arg :source_path

command :restore do |c|
  c.action do |global_options, options, args|
    help_now! 'Specify at least one source path' if args.size == 0
    help_now! 'Specify only one source path' if args.size > 1

    restorer = Raz::Restorer.new(args.first)
    restorer.restore
  end
end



# ---------------------------------------------------------

exit run(ARGV)
